
4. Time complexity for selectionsort is O(n^2) and omega is also N^2 which means that its also theta(N^2).

5. Time complexity is O(N), but best case is Omega(N/2)


9.

cutoff

5  	45441900
10	45004000
15	51844400
20	55171100
25	44898100
30	53265700





8.

Arraysize = 1000
quickSort är 9% snabbare.

Arraysize = 100k
Merge är 18% snabbare.

Arraysize = 1mil
337868100/409472500 = 0.82, merge är 18% snabbare


10.

[1 3 4 8 9 5 2]

[1 3 4 8 5 9 2]

[1 3 4 5 8 9 2]

krävs minst 1+2+3+4+1+1 = 12 comparisons (för att få 5 på rätt plats)
krävs 2 swaps.

11. 

a.
Insertionsort är bättre för den swappar inte. Gör dock en jävla massa comparisons

Selectionsort swappar alltid. Massor med comparisons och swaps. (swappar i med i)

b. 
Insertionsort är bättre. Den gör inga swaps här heller utan bara massor comparisons.
SelectSort gör fortf massor med onödiga swaps.

c.
Selectionsort bättre för den behöver enbart göra n antals swaps. Insertionsort behöver göra betydligt mer swaps (typ n^2).
Insertionsort swappar sig fram från index till index.
Selectionsort hittar rätt index omedelbart.




